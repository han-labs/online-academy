<div class="container-fluid">
    <div class="row">
        <!-- Sidebar Curriculum - CÓ THỂ ĐÓNG MỞ -->
        <div class="col-lg-3 bg-light border-end sidebar-curriculum" id="sidebarCurriculum" style="height: 100vh; overflow-y: auto;">
            <div class="p-3">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Nội dung khóa học</h5>
                    <div>
                        <button class="btn btn-outline-secondary btn-sm me-2" id="toggleSidebar">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                       
                    </div>
                </div>

                <div class="progress mb-3" style="height: 6px;">
                    <div class="progress-bar" role="progressbar" style="width: {{progress.percentage}}%; background-color: #6f42c1;"
                        aria-valuenow="{{progress.percentage}}" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
                <small class="text-muted">{{progress.completed}}/{{progress.total}} bài học ({{progress.percentage}}%)</small>

                <div class="mt-4">
                    {{#each chapters}}
                    <div class="mb-3">
                        <h6 class="fw-bold">{{this.title}}</h6>
                        <div class="ps-3">
                            {{#each this.lectures}}
                            <div class="d-flex align-items-center mb-2">
                                {{#if (contains ../completedLectureIds this.id)}}
                                <i class="bi bi-check-square-fill text-purple me-2" style="color: #6f42c1;"></i>
                                {{else}}
                                <i class="bi bi-square text-muted me-2"></i>
                                {{/if}}
                                <a href="#" class="lecture-link text-decoration-none text-dark small"
                                    data-lecture-id="{{this.id}}" data-video-url="{{this.video_url}}"
                                    data-lecture-title="{{this.title}}" data-duration="{{this.duration_minutes}}">
                                    {{this.title}}
                                </a>
                                <span class="text-muted small ms-2">{{this.duration_minutes}} phút</span>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    {{/each}}
                </div>
            </div>
        </div>

        <!-- Main Content Area - UDEMY STYLE -->
        <div class="col-lg-9 p-0 main-content" id="mainContent">
            {{!-- VIDEO PLAYER - CHIẾM TOÀN BỘ WIDTH --}}
            <div class="video-container-wrapper position-relative">
                <!-- TOGGLE SIDEBAR BUTTON - UDEMY STYLE -->
                <div class="sidebar-toggle-container" id="sidebarToggleContainer" style="display: none;">
                    <button class="btn udemy-sidebar-toggle" id="openSidebar" title="Mở nội dung khóa học">
                        <i class="bi bi-chevron-right"></i>
                    </button>
                </div>
                
                <div id="video-container" class="ratio ratio-16x9 bg-dark">
                    <!-- Placeholder -->
                    <div id="video-placeholder"
                        class="d-flex flex-column justify-content-center align-items-center text-white w-100 h-100">
                        
                        <h5 class="mt-3">Chọn bài học để bắt đầu</h5>
                    </div>

                    <!-- PLYR.IO PLAYER -->
                    <div class="plyr__video-embed" id="plyr-player" style="display: none;">
                        <iframe></iframe>
                    </div>
                </div>
                
                {{!-- VIDEO INFO BAR - HIỆN KHI CÓ VIDEO --}}
                <div class="video-info-bar bg-dark text-white px-4 py-3 border-top" id="video-info-bar" style="display: none;">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 id="current-lecture-title" class="mb-0">Chọn bài học để bắt đầu</h4>
                        </div>
                        <div id="lecture-nav" style="display: none;">
                            <button id="prev-lecture" class="btn btn-outline-light btn-sm me-2">
                                <i class="bi bi-chevron-left"></i> Bài trước
                            </button>
                            <button id="next-lecture" class="btn btn-light btn-sm">
                                Bài sau <i class="bi bi-chevron-right"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            {{!-- TABS SECTION - NGAY DƯỚI VIDEO --}}
            <div class="tabs-section px-4 pt-4">
                <ul class="nav nav-tabs" id="learningTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" 
                                data-bs-target="#overview" type="button" role="tab">
                            <i class="bi bi-play-circle me-2"></i>Overview
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="course-content-tab" data-bs-toggle="tab" 
                                data-bs-target="#course-content" type="button" role="tab">
                            <i class="bi bi-list-ul me-2"></i>Course Content
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" 
                                data-bs-target="#reviews" type="button" role="tab">
                            <i class="bi bi-star me-2"></i>Reviews
                            {{#if course.rating_count}}
                            <span class="badge bg-secondary ms-1">{{course.rating_count}}</span>
                            {{/if}}
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="resources-tab" data-bs-toggle="tab" 
                                data-bs-target="#resources" type="button" role="tab">
                            <i class="bi bi-file-earmark-text me-2"></i>Resources
                        </button>
                    </li>
                </ul>
                
                <div class="tab-content py-4">
                    <!-- Tab Overview -->
                    <div class="tab-pane fade show active" id="overview" role="tabpanel">
                        <div id="lecture-content">
                            <div class="text-center py-5 text-muted" id="default-lecture-message">
                                <i class="bi bi-play-circle display-1"></i>
                                <h4 class="mt-3">Chọn bài học để bắt đầu</h4>
                                <p>Nội dung bài học sẽ hiển thị ở đây</p>
                            </div>
                            <div id="dynamic-lecture-info" style="display: none;"></div>
                        </div>
                    </div>

                    <!-- Tab Course Content - TAB MỚI -->
                    <div class="tab-pane fade" id="course-content" role="tabpanel">
                        <div class="course-content-tab">
                            <div class="d-flex justify-content-between align-items-center mb-4">
                                <h5>Nội dung khóa học</h5>
                                <div class="progress-info">
                                    <small class="text-muted">{{progress.completed}}/{{progress.total}} bài học hoàn thành</small>
                                    <div class="progress mt-1" style="height: 6px; width: 200px;">
                                        <div class="progress-bar" style="width: {{progress.percentage}}%; background-color: #6f42c1;"></div>
                                    </div>
                                </div>
                            </div>

                            {{#each chapters}}
                            <div class="chapter-card mb-4">
                                <div class="card border-0 shadow-sm">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0 fw-bold">{{this.title}}</h6>
                                        <small class="text-muted">{{length this.lectures}} bài giảng</small>
                                    </div>
                                    <div class="card-body p-0">
                                        <div class="list-group list-group-flush">
                                            {{#each this.lectures}}
                                            <div class="list-group-item d-flex align-items-center py-3">
                                                {{#if (contains ../completedLectureIds this.id)}}
                                                <i class="bi bi-check-square-fill text-purple me-3" style="color: #6f42c1; font-size: 1.2rem;"></i>
                                                {{else}}
                                                <i class="bi bi-square text-muted me-3" style="font-size: 1.2rem;"></i>
                                                {{/if}}
                                                <div class="flex-grow-1">
                                                    <a href="#" class="lecture-link text-decoration-none text-dark fw-medium"
                                                        data-lecture-id="{{this.id}}" data-video-url="{{this.video_url}}"
                                                        data-lecture-title="{{this.title}}" data-duration="{{this.duration_minutes}}">
                                                        {{this.title}}
                                                    </a>
                                                    <div class="d-flex justify-content-between align-items-center mt-1">
                                                        <small class="text-muted">
                                                            {{#if is_preview_allowed}}
                                                            <span class="badge bg-info me-2">Preview</span>
                                                            {{/if}}
                                                            {{duration_minutes}} phút
                                                        </small>
                                                        {{#if (contains ../completedLectureIds this.id)}}
                                                        <small class="text-success">
                                                            <i class="bi bi-check-circle me-1"></i>Đã hoàn thành
                                                        </small>
                                                        {{/if}}
                                                    </div>
                                                </div>
                                            </div>
                                            {{/each}}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {{/each}}
                        </div>
                    </div>
                    
                    <!-- Tab Reviews -->
                    <div class="tab-pane fade" id="reviews" role="tabpanel">
                        {{> _reviewsSection }}
                    </div>
                    
                    <!-- Tab Resources -->
                    <div class="tab-pane fade" id="resources" role="tabpanel">
                        <div class="text-center py-5 text-muted">
                            <i class="bi bi-file-earmark-text display-1"></i>
                            <h4 class="mt-3">Tài liệu khóa học</h4>
                            <p>Không có tài liệu nào cho khóa học này</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Debug logs
    console.log('🔍 DEBUG - completedLectureIds từ server:', [{{#each completedLectureIds}}{{this}},{{/each}}]);
    console.log('🔍 DEBUG - Progress data:', {
        completed: {{progress.completed}},
        total: {{progress.total}}, 
        percentage: {{progress.percentage}}
    });

    // Global variables
    const allLectures = [
        {{#each chapters}}
        {{#each this.lectures}}
        {
            id: {{this.id}},
            title: "{{this.title}}",
            video_url: "{{this.video_url}}",
            duration: {{this.duration_minutes}},
            chapter_id: {{this.chapter_id}}
        },
        {{/each}}
        {{/each}}
    ];

    let completedLectureIds = [{{#each completedLectureIds}}{{this}},{{/each}}];
    let currentLectureIndex = -1;
    let currentLectureId = null;

    console.log('🔍 DEBUG - completedLectureIds sau init:', completedLectureIds);
    console.log('🔍 DEBUG - allLectures:', allLectures);

    // Extract YouTube ID từ URL
    function getYouTubeId(url) {
        const regex = /(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/;
        const match = url.match(regex);
        return match ? match[1] : null;
    }

    // Mark lecture as completed
    function markLectureAsCompleted(lectureId) {
        fetch('/api/progress/complete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                lecture_id: lectureId
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log('✅ Bài học đã được đánh dấu hoàn thành');
                updateProgressUI(lectureId);
                updateProgressBar();
            }
        })
        .catch(error => console.error('Error:', error));
    }

    // Update progress bar
    async function updateProgressBar() {
        try {
            const response = await fetch(`/api/progress/{{course.id}}`);
            const data = await response.json();
            
            if (data.success) {
                const progress = data.data;
                
                const progressBar = document.querySelector('.progress-bar');
                const progressText = document.querySelector('.text-muted');
                
                if (progressBar) {
                    progressBar.style.width = `${progress.percentage}%`;
                    progressBar.setAttribute('aria-valuenow', progress.percentage);
                }
                
                if (progressText) {
                    progressText.textContent = `${progress.completed}/${progress.total} bài học (${progress.percentage}%)`;
                }
                
                console.log('📊 Progress bar updated:', progress);
            }
        } catch (error) {
            console.error('Error updating progress bar:', error);
        }
    }

    // Refresh completed lectures
    async function refreshCompletedLectures() {
        try {
            const response = await fetch(`/api/progress/completed/{{course.id}}`);
            const data = await response.json();
            
            if (data.success) {
                completedLectureIds = data.data;
                console.log('🔄 Completed lectures refreshed:', completedLectureIds);
                
                document.querySelectorAll('.lecture-link').forEach(link => {
                    const lectureId = parseInt(link.getAttribute('data-lecture-id'));
                    if (completedLectureIds.includes(lectureId)) {
                        const lectureItem = link.closest('.d-flex, .list-group-item');
                        const icon = lectureItem.querySelector('i');
                        if (icon) {
                            if (lectureItem.classList.contains('list-group-item')) {
                                // Tab course content
                                icon.className = 'bi bi-check-square-fill text-purple me-3';
                                icon.style.color = '#6f42c1';
                                icon.style.fontSize = '1.2rem';
                            } else {
                                // Sidebar
                                icon.className = 'bi bi-check-square-fill text-purple me-2';
                                icon.style.color = '#6f42c1';
                            }
                        }
                    }
                });
            }
        } catch (error) {
            console.error('Error refreshing completed lectures:', error);
        }
    }

    // Update UI
    function updateProgressUI(lectureId) {
        // Cập nhật sidebar
        const sidebarLectureLink = document.querySelector(`.sidebar-curriculum [data-lecture-id="${lectureId}"]`);
        if (sidebarLectureLink) {
            const lectureItem = sidebarLectureLink.closest('.d-flex');
            const icon = lectureItem.querySelector('i');
           if (tabIcon) {
            tabIcon.className = 'bi bi-check-square-fill text-purple me-2';
            tabIcon.style.color = '#6f42c1';
            tabIcon.style.fontSize = '1.2rem';
        }
        }

        // Cập nhật tab course content
        const tabLectureLink = document.querySelector(`#course-content [data-lecture-id="${lectureId}"]`);
        if (tabLectureLink) {
            const tabLectureItem = tabLectureLink.closest('.list-group-item');
            const tabIcon = tabLectureItem.querySelector('i');
            const statusText = tabLectureItem.querySelector('.text-success');
            
            if (tabIcon) {
                tabIcon.className = 'bi bi-check-square-fill text-purple me-3';
                tabIcon.style.color = '#6f42c1';
                tabIcon.style.fontSize = '1.2rem';
            }
            
            if (!statusText) {
                const statusDiv = document.createElement('small');
                statusDiv.className = 'text-success';
                statusDiv.innerHTML = '<i class="bi bi-check-circle me-1"></i>Đã hoàn thành';
                tabLectureItem.querySelector('.flex-grow-1 .d-flex').appendChild(statusDiv);
            }
        }
        
        if (!completedLectureIds.includes(lectureId)) {
            completedLectureIds.push(lectureId);
            console.log('📝 Completed lectures updated:', completedLectureIds);
        }
    }

    // Load video với Plyr.io + YouTube
    function loadVideoWithPlyr(lectureId, videoUrl, lectureTitle) {
        console.log('🔍 DEBUG - Loading video with Plyr:', lectureId, videoUrl);
        
        document.getElementById('video-placeholder').style.display = 'none';
        document.getElementById('plyr-player').style.display = 'block';

        const youtubeId = getYouTubeId(videoUrl);
        console.log('🔍 DEBUG - YouTube ID:', youtubeId);
        
        if (!youtubeId) {
            console.error('❌ Invalid YouTube URL:', videoUrl);
            return;
        }

        // YouTube embed URL cho Plyr
        const embedUrl = `https://www.youtube.com/embed/${youtubeId}`;
        
        // Khởi tạo Plyr player
        if (window.coursePlayer) {
            window.coursePlayer.destroy();
        }

        const iframe = document.querySelector('#plyr-player iframe');
        iframe.src = embedUrl;

        window.coursePlayer = new Plyr('#plyr-player', {
            youtube: {
                noCookie: true,
                rel: 0,
                showinfo: 0,
                iv_load_policy: 3,
                modestbranding: 1
            },
            autoplay: true
        });

        // Auto mark completed khi video ends
        window.coursePlayer.on('ended', () => {
            console.log('🎬 Video ended - Auto marking completed');
            if (currentLectureId) {
                markLectureAsCompleted(currentLectureId);
                
                // Auto advance to next lecture
                if (currentLectureIndex < allLectures.length - 1) {
                    setTimeout(() => {
                        const nextLecture = allLectures[currentLectureIndex + 1];
                        simulateLectureClick(nextLecture.id);
                    }, 2000);
                }
            }
        });

        currentLectureId = lectureId;
        console.log('✅ Plyr.io + YouTube loaded successfully');
    }

    // Update lecture UI khi click bài học
    function updateLectureUI(lectureTitle, duration) {
        // Hiện video info bar
        document.getElementById('video-info-bar').style.display = 'block';
        
        // Cập nhật title
        document.getElementById('current-lecture-title').textContent = lectureTitle;
        document.getElementById('lecture-nav').style.display = 'flex';

        // Cập nhật tab Overview
        const lectureInfoHTML = `
            <div class="lecture-details">
                <h3 class="mb-3">${lectureTitle}</h3>
                <div class="row mt-4">
                    <div class="col-md-8">
                        <h5 class="mb-3">Mô tả bài học</h5>
                        <p class="text-muted">Bài học này là một phần của chương trình khóa học "{{course.title}}". Thời lượng: ${duration} phút.</p>
                        
                        <div class="mt-4">
                            <h5 class="mb-3">Nội dung chính</h5>
                            <ul class="text-muted">
                                <li>Kiến thức cơ bản về chủ đề</li>
                                <li>Ví dụ thực tế và ứng dụng</li>
                                <li>Bài tập thực hành</li>
                                <li>Tips và best practices</li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card border-0 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">Thông tin bài học</h5>
                                <div class="lecture-meta">
                                    <div class="d-flex justify-content-between mb-2 py-2 border-bottom">
                                        <span class="text-muted">Thời lượng:</span>
                                        <span class="fw-medium">${duration} phút</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2 py-2 border-bottom">
                                        <span class="text-muted">Trạng thái:</span>
                                        <span class="text-success fw-medium">Đang học</span>
                                    </div>
                                    <div class="d-flex justify-content-between py-2">
                                        <span class="text-muted">Độ khó:</span>
                                        <span class="fw-medium">Trung bình</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.getElementById('default-lecture-message').style.display = 'none';
        document.getElementById('dynamic-lecture-info').innerHTML = lectureInfoHTML;
        document.getElementById('dynamic-lecture-info').style.display = 'block';
    }

    // Load video when click lecture
    document.querySelectorAll('.lecture-link').forEach((link, index) => {
        link.addEventListener('click', function (e) {
            e.preventDefault();

            const lectureId = parseInt(this.getAttribute('data-lecture-id'));
            const videoUrl = this.getAttribute('data-video-url');
            const lectureTitle = this.getAttribute('data-lecture-title');
            const duration = this.getAttribute('data-duration');

            currentLectureIndex = allLectures.findIndex(lecture => lecture.id === lectureId);

            // Cập nhật UI
            updateLectureUI(lectureTitle, duration);

            if (videoUrl) {
                loadVideoWithPlyr(lectureId, videoUrl, lectureTitle);
            }

            markLectureAsCompleted(lectureId);
        });
    });

    // Navigation
    document.getElementById('prev-lecture').addEventListener('click', () => {
        if (currentLectureIndex > 0) {
            const prevLecture = allLectures[currentLectureIndex - 1];
            simulateLectureClick(prevLecture.id);
        }
    });

    document.getElementById('next-lecture').addEventListener('click', () => {
        if (currentLectureIndex < allLectures.length - 1) {
            const nextLecture = allLectures[currentLectureIndex + 1];
            simulateLectureClick(nextLecture.id);
        }
    });

    function simulateLectureClick(lectureId) {
        const lectureLink = document.querySelector(`[data-lecture-id="${lectureId}"]`);
        if (lectureLink) {
            lectureLink.click();
        }
    }

    // SIDEBAR TOGGLE FUNCTIONALITY
    let sidebarOpen = true;

    function toggleSidebar() {
        const sidebar = document.getElementById('sidebarCurriculum');
        const mainContent = document.getElementById('mainContent');
        const toggleContainer = document.getElementById('sidebarToggleContainer');
        
        if (sidebarOpen) {
            // Đóng sidebar
            sidebar.classList.remove('col-lg-3');
            sidebar.style.display = 'none';
            mainContent.classList.remove('col-lg-9');
            mainContent.classList.add('col-lg-12');
            toggleContainer.style.display = 'block';
        } else {
            // Mở sidebar
            sidebar.classList.add('col-lg-3');
            sidebar.style.display = 'block';
            mainContent.classList.remove('col-lg-12');
            mainContent.classList.add('col-lg-9');
            toggleContainer.style.display = 'none';
        }
        
        sidebarOpen = !sidebarOpen;
    }

    // Event listeners cho sidebar
    document.getElementById('toggleSidebar')?.addEventListener('click', toggleSidebar);
    document.getElementById('openSidebar')?.addEventListener('click', toggleSidebar);

    // Initialize on load
    document.addEventListener('DOMContentLoaded', function() {
        refreshCompletedLectures();
    });
</script>