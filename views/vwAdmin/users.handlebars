<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">User Management</h1>
</div>

{{#if error}}
<div class="alert alert-warning alert-dismissible fade show" role="alert">
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  <strong>Error:</strong> Something went wrong. Please try again.
</div>
{{/if}}

{{#if success}}
<div class="alert alert-success alert-dismissible fade show" role="alert">
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  <strong>Success:</strong> Action completed successfully.
</div>
{{/if}}

<!-- Create Instructor Form -->
<div class="card mb-4">
  <div class="card-header">
    <h5 class="mb-0">Create Instructor Account</h5>
  </div>
  <div class="card-body">
    <form method="post" action="/admin/users/create-instructor" id="frmCreateInstructor">
      <div class="row">
        <div class="col-md-12 mb-3">
          <input type="text" class="form-control" name="full_name" placeholder="Full Name" required>
        </div>
        <div class="col-md-6 mb-3">
          <input type="email" class="form-control" name="email" placeholder="Email" required>
        </div>
        <div class="col-md-6 mb-3">
          <input type="password" class="form-control" id="txtPassword" name="password" placeholder="Password" required
            minlength="6">
        </div>
        <div class="col-md-12 mb-3">
          <input type="text" class="form-control" name="instructor_bio" placeholder="Short Bio (optional)">
        </div>
        <div class="col-md-2 ms-auto">
          <button type="submit" class="btn btn-success w-100">Create</button>
        </div>
      </div>
    </form>
  </div>
</div>

<!-- User List -->
<div class="card">
  <div class="card-header">
    <h5 class="card-title mb-0">User List</h5>
  </div>
  <div class="card-body">

    <!-- Tabs -->
    <ul class="nav nav-tabs mb-3" id="userTabs">
      <li class="nav-item">
        <a class="nav-link active" data-bs-toggle="tab" href="#instructors">Instructors</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="tab" href="#students">Students</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" data-bs-toggle="tab" href="#all">All Users</a>
      </li>
    </ul>

    <div class="tab-content">

      <!-- Instructors Tab -->
      <div class="tab-pane fade show active" id="instructors">
        <div class="table-responsive">
          <table class="table table-bordered align-middle">
            <thead class="table-dark text-center">
              <tr>
                <th width="50">No.</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Created Date</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {{#each users}}
              {{#if (eq this.role 'instructor')}}
              <tr>
                <td class="text-center">{{@index}}</td>
                <td>{{this.full_name}}</td>
                <td>{{this.email}}</td>
                <td class="text-center">{{formatDate this.created_at}}</td>
                <td class="text-center">
                  <span class="badge {{#if this.is_active}}bg-success{{else}}bg-secondary{{/if}}">
                    {{#if this.is_active}}Active{{else}}Locked{{/if}}
                  </span>
                </td>
                <td class="text-center">
                  <div class="d-flex gap-2 justify-content-center">
                    <a href="/admin/users/{{this.id}}" class="btn btn-sm btn-primary">
                      <i class="bi bi-eye"></i> View
                    </a>
                    <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal"
                      data-bs-target="#editUserModal{{this.id}}">
                      <i class="bi bi-pencil"></i> Edit
                    </button>
                    <form method="post" action="/admin/users/delete" class="d-inline frmDeleteUser"
                      data-user-name="{{this.full_name}}">
                      <input type="hidden" name="id" value="{{this.id}}">
                      <button type="submit" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    </form>
                    {{#if this.is_active}}
                    <button class="btn btn-sm btn-warning btn-lock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-lock"></i> Lock
                    </button>
                    {{else}}
                    <button class="btn btn-sm btn-success btn-unlock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-unlock"></i> Unlock
                    </button>
                    {{/if}}
                  </div>
                </td>
              </tr>
              {{/if}}
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>

      <!-- Students Tab -->
      <div class="tab-pane fade" id="students">
        <div class="table-responsive">
          <table class="table table-bordered align-middle">
            <thead class="table-dark text-center">
              <tr>
                <th width="50">No.</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Created Date</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {{#each users}}
              {{#if (eq this.role 'student')}}
              <tr>
                <td class="text-center">{{@index}}</td>
                <td>{{this.full_name}}</td>
                <td>{{this.email}}</td>
                <td class="text-center">{{formatDate this.created_at}}</td>
                <td class="text-center">
                  <span class="badge {{#if this.is_active}}bg-success{{else}}bg-secondary{{/if}}">
                    {{#if this.is_active}}Active{{else}}Locked{{/if}}
                  </span>
                </td>
                <td class="text-center">
                  <div class="d-flex gap-2 justify-content-center">
                    <a href="/admin/users/{{this.id}}" class="btn btn-sm btn-primary">
                      <i class="bi bi-eye"></i> View
                    </a>
                    <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal"
                      data-bs-target="#editUserModal{{this.id}}">
                      <i class="bi bi-pencil"></i> Edit
                    </button>
                    <form method="post" action="/admin/users/delete" class="d-inline frmDeleteUser"
                      data-user-name="{{this.full_name}}">
                      <input type="hidden" name="id" value="{{this.id}}">
                      <button type="submit" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    </form>
                    {{#if this.is_active}}
                    <button class="btn btn-sm btn-warning btn-lock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-lock"></i> Lock
                    </button>
                    {{else}}
                    <button class="btn btn-sm btn-success btn-unlock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-unlock"></i> Unlock
                    </button>
                    {{/if}}
                  </div>
                </td>
              </tr>
              {{/if}}
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>

      <!-- All Users Tab -->
      <div class="tab-pane fade" id="all">
        <div class="table-responsive">
          <table class="table table-bordered align-middle">
            <thead class="table-dark text-center">
              <tr>
                <th width="50">No.</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Created Date</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {{#each users}}
              {{#unless (eq this.role 'admin')}}
              <tr>
                <td class="text-center">{{@index}}</td>
                <td>{{this.full_name}}</td>
                <td>{{this.email}}</td>
                <td class="text-center">
                  <span class="badge bg-{{getRoleBadge this.role}}">
                    {{getRoleText this.role}}
                  </span>
                </td>
                <td class="text-center">{{formatDate this.created_at}}</td>
                <td class="text-center">
                  <span class="badge {{#if this.is_active}}bg-success{{else}}bg-secondary{{/if}}">
                    {{#if this.is_active}}Active{{else}}Locked{{/if}}
                  </span>
                </td>
                <td class="text-center">
                  <div class="d-flex gap-2 justify-content-center">
                    <a href="/admin/users/{{this.id}}" class="btn btn-sm btn-primary">
                      <i class="bi bi-eye"></i> View
                    </a>
                    <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal"
                      data-bs-target="#editUserModal{{this.id}}">
                      <i class="bi bi-pencil"></i> Edit
                    </button>
                    <form method="post" action="/admin/users/delete" class="d-inline frmDeleteUser"
                      data-user-name="{{this.full_name}}">
                      <input type="hidden" name="id" value="{{this.id}}">
                      <button type="submit" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    </form>
                    {{#if this.is_active}}
                    <button class="btn btn-sm btn-warning btn-lock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-lock"></i> Lock
                    </button>
                    {{else}}
                    <button class="btn btn-sm btn-success btn-unlock-user" 
                            data-user-id="{{this.id}}" 
                            data-user-name="{{this.full_name}}">
                      <i class="bi bi-unlock"></i> Unlock
                    </button>
                    {{/if}}
                  </div>
                </td>
              </tr>
              {{/unless}}
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>

    </div>
  </div>
</div>

<!-- Edit User Modal -->
{{#each users}}
<div class="modal fade" id="editUserModal{{this.id}}" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>

      <form method="post" action="/admin/users/update">
        <div class="modal-body">
          <input type="hidden" name="id" value="{{this.id}}">

          <div class="mb-3">
            <label class="form-label">Full Name</label>
            <input type="text" class="form-control" name="full_name" value="{{this.full_name}}" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" name="email" value="{{this.email}}" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Role</label>
            <select name="role" class="form-select" required>
              <option value="student" {{#if (eq this.role 'student' )}}selected{{/if}}>Student</option>
              <option value="instructor" {{#if (eq this.role 'instructor' )}}selected{{/if}}>Instructor</option>
            </select>
          </div>

          {{#if (eq this.role 'instructor')}}
          <div class="mb-3">
            <label class="form-label">Bio</label>
            <textarea class="form-control" name="instructor_bio" rows="3">{{this.instructor_bio}}</textarea>
          </div>
          {{/if}}
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>

    </div>
  </div>
</div>
{{/each}}

<!-- Lock User Confirmation Modal -->
<div class="modal fade" id="lockUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Confirm Lock User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to lock user account: <strong id="lockUserName"></strong>?</p>
        <div id="lockImpactAnalysis" class="alert alert-warning d-none"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-warning" id="confirmLockUser">Lock Account</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Validate password on create
  document.querySelector('#frmCreateInstructor')?.addEventListener('submit', function (e) {
    const password = document.querySelector('#txtPassword').value.trim();
    if (password.length < 6) {
      e.preventDefault();
      alert('Password must be at least 6 characters long.');
    }
  });

  // Confirm delete
  document.querySelectorAll('.frmDeleteUser').forEach(form => {
    form.addEventListener('submit', function (e) {
      const name = this.getAttribute('data-user-name');
      if (!confirm(`Are you sure you want to delete user "${name}"?`)) {
        e.preventDefault();
      }
    });
  });

  // Fix numbering when tab switches
  function renumberAllTables() {
    document.querySelectorAll('.tab-pane table tbody').forEach(tbody => {
      tbody.querySelectorAll('tr').forEach((row, index) => {
        const cell = row.querySelector('td:first-child');
        if (cell) cell.textContent = index + 1;
      });
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(renumberAllTables, 200);
    document.querySelectorAll('#userTabs a').forEach(tab => {
      tab.addEventListener('shown.bs.tab', renumberAllTables);
    });
  });
  // User Lock/Unlock functionality
  let currentLockUserId = null;

  // Lock user button handler
  document.querySelectorAll('.btn-lock-user').forEach(btn => {
    btn.addEventListener('click', async function() {
      const userId = this.dataset.userId;
      const userName = this.dataset.userName;
      
      currentLockUserId = userId;
      document.getElementById('lockUserName').textContent = userName;
      
      // Show impact analysis
      try {
        const response = await fetch(`/admin/users/${userId}/impact-analysis`);
        const result = await response.json();
        
        const impactDiv = document.getElementById('lockImpactAnalysis');
        if (result.success && result.impact) {
          const impact = result.impact;
          let impactHtml = '<strong>Impact when locking:</strong><ul>';
          
          if (impact.user.role === 'instructor' && impact.courses.length > 0) {
            impactHtml += `<li>${impact.courses.length} courses will be affected</li>`;
          }
          if (impact.enrollments > 0) {
            impactHtml += `<li>${impact.enrollments} enrollments</li>`;
          }
          if (impact.reviews > 0) {
            impactHtml += `<li>${impact.reviews} reviews</li>`;
          }
          
          impactHtml += '</ul>';
          impactDiv.innerHTML = impactHtml;
          impactDiv.classList.remove('d-none');
        } else {
          impactDiv.classList.add('d-none');
        }
      } catch (error) {
        console.error('Error fetching impact analysis:', error);
      }
      
      // Show modal
      new bootstrap.Modal(document.getElementById('lockUserModal')).show();
    });
  });

  // Confirm lock user
  document.getElementById('confirmLockUser').addEventListener('click', async function() {
  if (!currentLockUserId) return;
  
  try {
    const response = await fetch('/admin/users/toggle-status', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: currentLockUserId,
        action: 'deactivate'
      })
    });
    
    const result = await response.json();
    
    if (result.success) {
      // Đóng modal và reload trang
      bootstrap.Modal.getInstance(document.getElementById('lockUserModal')).hide();
      location.reload();
    } else {
      alert('Error: ' + result.message);
    }
  } catch (error) {
    console.error('Error locking user:', error);
    alert('Error locking user account');
  }
});

  // Unlock user button handler
  document.querySelectorAll('.btn-unlock-user').forEach(btn => {
    btn.addEventListener('click', async function() {
      const userId = this.dataset.userId;
      const userName = this.dataset.userName;
      
      if (confirm(`Are you sure you want to unlock user account: ${userName}?`)) {
        try {
          const response = await fetch('/admin/users/toggle-status', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              id: userId,
              action: 'activate'
            })
          });
          
          const result = await response.json();
          
          if (result.success) {
            location.reload();
          } else {
            alert('Error: ' + result.message);
          }
        } catch (error) {
          console.error('Error unlocking user:', error);
          alert('Error unlocking user account');
        }
      }
    });
  });
</script>