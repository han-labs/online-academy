<div class="d-flex justify-content-between align-items-center pb-3 mb-4 border-bottom">
  <h1 class="h3 fw-bold">Course Management</h1>
  <a href="/admin/courses/create" class="btn btn-primary d-flex align-items-center gap-1">
    <i class="bi bi-plus-lg"></i>
    Add Course
  </a>
</div>

{{#if error}}
<div class="alert alert-danger alert-dismissible fade show" role="alert">
  <strong>Error:</strong> An error has occurred. Please try again.
  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
</div>
{{/if}}

{{#if success}}
<div class="alert alert-success alert-dismissible fade show" role="alert">
  <strong>Success:</strong> The operation has been completed successfully.
  <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
</div>
{{/if}}

<!-- Filter Section -->
<div class="card shadow-sm mb-4">
  <div class="card-header bg-light">
    <h5 class="card-title mb-0">
      <i class="bi bi-funnel me-2"></i>Filters
    </h5>
  </div>
  <div class="card-body">
    <!-- Filter Type Selection -->
    <div class="row mb-3">
      <div class="col-md-12">
        <label class="form-label fw-semibold">Filter by:</label>
        <div class="btn-group" role="group">
          <input type="radio" class="btn-check" name="filter_type" id="filter_none" value="none" 
                 {{#unless currentFilters.filter_type}}checked{{/unless}}
                 {{#if (eq currentFilters.filter_type 'none')}}checked{{/if}}>
          <label class="btn btn-outline-primary" for="filter_none">
            <i class="bi bi-x-circle me-1"></i>No Filter
          </label>

          <input type="radio" class="btn-check" name="filter_type" id="filter_category" value="category" 
                 {{#if (eq currentFilters.filter_type 'category')}}checked{{/if}}>
          <label class="btn btn-outline-primary" for="filter_category">
            <i class="bi bi-tags me-1"></i>Category
          </label>

          <input type="radio" class="btn-check" name="filter_type" id="filter_instructor" value="instructor" 
                 {{#if (eq currentFilters.filter_type 'instructor')}}checked{{/if}}>
          <label class="btn btn-outline-primary" for="filter_instructor">
            <i class="bi bi-person me-1"></i>Instructor
          </label>
        </div>
      </div>
    </div>

    <!-- Dynamic Filter Content -->
    <form method="get" action="/admin/courses" id="filterForm">
      <!-- QUAN TRỌNG: Thêm hidden input cho filter_type -->
      <input type="hidden" name="filter_type" id="filter_type_input" value="{{currentFilters.filter_type}}">
      
      <!-- Category Filter -->
      <div class="row g-3 mb-3" id="category_filter_section" 
           style="display: {{#if (eq currentFilters.filter_type 'category')}}block{{else}}none{{/if}};">
        <div class="col-md-6">
          <label for="category_id" class="form-label">Select Category</label>
          <select class="form-select" id="category_id" name="category_id">
            <option value="">Choose a category...</option>
            {{#each filters.categories}}
            <option value="{{this.id}}" 
                    {{#if (eq this.id ../currentFilters.category_id)}}selected{{/if}}>
              {{this.name}}
            </option>
            {{/each}}
          </select>
        </div>
        <div class="col-md-6 d-flex align-items-end">
          <button type="submit" class="btn btn-primary me-2">
            <i class="bi bi-filter me-1"></i>Apply Filter
          </button>
          {{#if (eq currentFilters.filter_type 'category')}}
          <a href="/admin/courses" class="btn btn-outline-secondary">
            <i class="bi bi-x me-1"></i>Clear
          </a>
          {{/if}}
        </div>
      </div>

      <!-- Instructor Filter -->
      <div class="row g-3 mb-3" id="instructor_filter_section" 
           style="display: {{#if (eq currentFilters.filter_type 'instructor')}}block{{else}}none{{/if}};">
        <div class="col-md-6">
          <label for="instructor_id" class="form-label">Select Instructor</label>
          <select class="form-select" id="instructor_id" name="instructor_id">
            <option value="">Choose an instructor...</option>
            {{#each filters.instructors}}
            <option value="{{this.id}}" 
                    {{#if (eq this.id ../currentFilters.instructor_id)}}selected{{/if}}>
              {{this.full_name}}
            </option>
            {{/each}}
          </select>
        </div>
        <div class="col-md-6 d-flex align-items-end">
          <button type="submit" class="btn btn-primary me-2">
            <i class="bi bi-filter me-1"></i>Apply Filter
          </button>
          {{#if (eq currentFilters.filter_type 'instructor')}}
          <a href="/admin/courses" class="btn btn-outline-secondary">
            <i class="bi bi-x me-1"></i>Clear
          </a>
          {{/if}}
        </div>
      </div>
    </form>

    <!-- Active Filter Display -->
    {{#if currentFilters.filter_type}}
    <div class="mt-3 p-3 bg-light rounded">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <span class="fw-semibold">Active Filter:</span>
          {{#if (eq currentFilters.filter_type 'category')}}
            <span class="badge bg-primary ms-2">
              <i class="bi bi-tags me-1"></i>
              Category: 
              {{#each filters.categories}}
                {{#if (eq this.id ../currentFilters.category_id)}}{{this.name}}{{/if}}
              {{/each}}
            </span>
          {{/if}}
          
          {{#if (eq currentFilters.filter_type 'instructor')}}
            <span class="badge bg-primary ms-2">
              <i class="bi bi-person me-1"></i>
              Instructor: 
              {{#each filters.instructors}}
                {{#if (eq this.id ../currentFilters.instructor_id)}}{{this.full_name}}{{/if}}
              {{/each}}
            </span>
          {{/if}}
        </div>
        
        <a href="/admin/courses" class="btn btn-outline-danger btn-sm">
          <i class="bi bi-x-circle me-1"></i>Clear All Filters
        </a>
      </div>
    </div>
    {{/if}}
  </div>
</div>

<!-- Bulk Actions Section -->
<div class="card shadow-sm mb-3">
  <div class="card-body">
    <div class="row align-items-center">
      <div class="col-md-6">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" id="selectAllCourses">
          <label class="form-check-label fw-semibold" for="selectAllCourses">
            Select All
          </label>
        </div>
      </div>
      <div class="col-md-6">
        <div class="d-flex gap-2 justify-content-end">
          <select class="form-select w-auto" id="bulkActionSelect">
            <option value="">Bulk Actions</option>
            <option value="disable">Disable Selected</option>
            <option value="enable">Enable Selected</option>
          </select>
          <button type="button" class="btn btn-outline-primary" id="applyBulkAction">
            Apply
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Course Count -->
<div class="d-flex justify-content-between align-items-center mb-3">
  <p class="text-muted mb-0">
    Showing <strong>{{courses.length}}</strong> course(s)
    {{#if currentFilters.filter_type}}
      {{#if (eq currentFilters.filter_type 'category')}}
        in selected category
      {{else if (eq currentFilters.filter_type 'instructor')}}
        by selected instructor
      {{/if}}
    {{/if}}
  </p>
</div>

<div class="card shadow-sm">
  <div class="card-body p-0">
    <div class="table-responsive">
      <table class="table table-hover align-middle mb-0">
        <thead class="table-dark text-center">
          <tr>
            <th style="width: 40px;">
              <input type="checkbox" class="form-check-input m-0" id="selectAllHeader">
            </th>
            <th style="width: 60px;">ID</th>
            <th>Course Name</th>
            <th>Instructor</th>
            <th>Category</th>
            <th style="width: 130px;">Status</th>
            <th style="width: 280px;">Actions</th>
          </tr>
        </thead>

        <tbody>
          {{#each courses}}
          <tr>
            <td class="text-center">
              <input type="checkbox" class="form-check-input course-checkbox m-0" value="{{id}}">
            </td>
            <td class="text-center fw-semibold">{{id}}</td>
            <td class="fw-semibold">{{title}}</td>
            <td>{{instructor_name}}</td>
            <td>{{category_name}}</td>

            <td class="text-center">
              <span class="badge px-3 py-2 rounded-pill bg-{{getStatusBadge status}}">
                {{getStatusText status}}
              </span>
              {{#if (eq status 'disabled')}}
              {{/if}}
            </td>

            <td class="text-center">
              <div class="d-flex justify-content-center gap-2">
                <a href="/admin/courses/{{id}}" class="btn btn-sm btn-outline-primary d-flex align-items-center gap-1">
                  <i class="bi bi-eye"></i>
                  View
                </a>
                <a href="/admin/courses/{{id}}/edit" class="btn btn-sm btn-warning d-flex align-items-center gap-1">
                  <i class="bi bi-pencil"></i>
                  Edit
                </a>
                
                <!-- Nút Disable/Enable -->
                {{#if (eq status 'disabled')}}
                <button type="button" class="btn btn-sm btn-success btn-toggle-status d-flex align-items-center gap-1" 
                        data-course-id="{{id}}" data-course-title="{{title}}" data-action="enable">
                  <i class="bi bi-play-circle"></i>
                  Enable
                </button>
                {{else}}
                <button type="button" class="btn btn-sm btn-secondary btn-toggle-status d-flex align-items-center gap-1" 
                        data-course-id="{{id}}" data-course-title="{{title}}" data-action="disable">
                  <i class="bi bi-pause-circle"></i>
                  Disable
                </button>
                {{/if}}
                
                <form method="post" action="/admin/courses/delete" class="frmDeleteCourse d-inline" data-course-title="{{title}}">
                  <input type="hidden" name="id" value="{{id}}">
                  <button type="submit" class="btn btn-sm btn-danger d-flex align-items-center gap-1">
                    <i class="bi bi-trash"></i>
                    Delete
                  </button>
                </form>
              </div>
            </td>
          </tr>
          {{else}}
          <tr>
            <td colspan="7" class="text-center py-4">
              <div class="text-muted">
                <i class="bi bi-inbox display-4 d-block mb-2"></i>
                No courses found
                {{#if currentFilters.filter_type}}
                <div class="mt-2">
                  <a href="/admin/courses" class="btn btn-outline-primary btn-sm">
                    Clear filter to show all courses
                  </a>
                </div>
                {{/if}}
              </div>
            </td>
          </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
  // Xử lý disable/enable course
  document.querySelectorAll('.btn-toggle-status').forEach(button => {
    button.addEventListener('click', function() {
      const courseId = this.dataset.courseId;
      const courseTitle = this.dataset.courseTitle;
      const action = this.dataset.action;
      const actionText = action === 'disable' ? 'disable' : 'enable';

      if (confirm(`Are you sure you want to ${actionText} the course "${courseTitle}"?`)) {
        fetch('/admin/courses/toggle-status', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ id: courseId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert(data.message);
            location.reload();
          } else {
            alert('Error: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('An error occurred while processing your request');
        });
      }
    });
  });

  // Bulk actions
  document.getElementById('selectAllHeader')?.addEventListener('change', function() {
    const checkboxes = document.querySelectorAll('.course-checkbox');
    checkboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    document.getElementById('selectAllCourses').checked = this.checked;
  });

  document.getElementById('selectAllCourses')?.addEventListener('change', function() {
    const checkboxes = document.querySelectorAll('.course-checkbox');
    checkboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    document.getElementById('selectAllHeader').checked = this.checked;
  });

  document.getElementById('applyBulkAction')?.addEventListener('click', function() {
    const action = document.getElementById('bulkActionSelect').value;
    const selectedCourses = Array.from(document.querySelectorAll('.course-checkbox:checked'))
      .map(checkbox => checkbox.value);

    if (!action) {
      alert('Please select a bulk action');
      return;
    }

    if (selectedCourses.length === 0) {
      alert('Please select at least one course');
      return;
    }

    const actionText = action === 'disable' ? 'disable' : 'enable';
    if (confirm(`Are you sure you want to ${actionText} ${selectedCourses.length} course(s)?`)) {
      fetch('/admin/courses/bulk-status', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          courseIds: selectedCourses, 
          action: action 
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(data.message);
          location.reload();
        } else {
          alert('Error: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while processing your request');
      });
    }
  });

  // Handle filter type selection
  document.querySelectorAll('input[name="filter_type"]').forEach(radio => {
    radio.addEventListener('change', function() {
      const filterType = this.value;
      console.log('Filter type changed to:', filterType);
      
      // Cập nhật hidden input
      document.getElementById('filter_type_input').value = filterType;
      
      // Ẩn tất cả filter sections
      document.getElementById('category_filter_section').style.display = 'none';
      document.getElementById('instructor_filter_section').style.display = 'none';
      
      // Hiển thị section được chọn
      if (filterType === 'category') {
        document.getElementById('category_filter_section').style.display = 'block';
      } else if (filterType === 'instructor') {
        document.getElementById('instructor_filter_section').style.display = 'block';
      } else if (filterType === 'none') {
        // Nếu chọn "No Filter", chuyển hướng ngay
        window.location.href = '/admin/courses';
      }
    });
  });

  // Auto-submit khi chọn giá trị trong dropdown
  document.getElementById('category_id')?.addEventListener('change', function() {
    const categoryId = this.value;
    console.log('Category changed to:', categoryId);
    
    if (categoryId) {
      // Đảm bảo filter_type được set đúng
      document.getElementById('filter_type_input').value = 'category';
      document.getElementById('filterForm').submit();
    } else {
      // Nếu chọn "Choose a category..." thì clear filter
      window.location.href = '/admin/courses';
    }
  });

  document.getElementById('instructor_id')?.addEventListener('change', function() {
    const instructorId = this.value;
    console.log('Instructor changed to:', instructorId);
    
    if (instructorId) {
      // Đảm bảo filter_type được set đúng
      document.getElementById('filter_type_input').value = 'instructor';
      document.getElementById('filterForm').submit();
    } else {
      // Nếu chọn "Choose an instructor..." thì clear filter
      window.location.href = '/admin/courses';
    }
  });

  // Xử lý nút Apply Filter
  document.querySelectorAll('#filterForm button[type="submit"]').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      
      // Đảm bảo filter_type được set đúng trước khi submit
      const categorySection = document.getElementById('category_filter_section');
      const instructorSection = document.getElementById('instructor_filter_section');
      
      if (categorySection.style.display === 'block') {
        document.getElementById('filter_type_input').value = 'category';
      } else if (instructorSection.style.display === 'block') {
        document.getElementById('filter_type_input').value = 'instructor';
      }
      
      document.getElementById('filterForm').submit();
    });
  });

  // Delete course confirmation
  document.querySelectorAll('.frmDeleteCourse').forEach(form => {
    form.addEventListener('submit', function (e) {
      const courseTitle = this.dataset.courseTitle;
      if (!confirm(`Are you sure you want to delete the course "${courseTitle}"?`)) {
        e.preventDefault();
      }
    });
  });

  // Initialize form state on page load
  document.addEventListener('DOMContentLoaded', function() {
    const currentFilterType = '{{currentFilters.filter_type}}';
    console.log('Page loaded with filter type:', currentFilterType);
    
    // Đảm bảo radio button được chọn đúng
    if (currentFilterType === 'category') {
      document.getElementById('filter_category').checked = true;
      document.getElementById('category_filter_section').style.display = 'block';
    } else if (currentFilterType === 'instructor') {
      document.getElementById('filter_instructor').checked = true;
      document.getElementById('instructor_filter_section').style.display = 'block';
    } else {
      document.getElementById('filter_none').checked = true;
    }
    
    // Đảm bảo hidden input có giá trị đúng
    document.getElementById('filter_type_input').value = currentFilterType || 'none';
  });
</script>